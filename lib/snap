(function() {
    'use strict';

    var p =         process,
        args =      p.argv,
        snapArgs =  require('./js/misc/snapArgs'),
        term =      require('./js/misc/terminal'),
        main =      require('./js/index');

    var VERSION = '0.0.1',
        INTERPRETTER_TAGS = {
            head: [
                'meta',
                'title',
                'link',
                'script',
                'style'
            ],
            body: [],
            template: []
        };

    snapArgs.set('tags', INTERPRETTER_TAGS);

    if (~args.indexOf('node')) {
        args.splice(args.indexOf('node'), 1);
    }

    if (/-{1,}h($|elp)/i.test(args)) {
        term.help(VERSION);
        p.exit(0);
    }

    if (/-[-](ember|handlebars|t($|emplate))/i.test(args)) {
        snapArgs.template = {
            ember: /-[-]ember/i.test(args),
            handlebars: /-[-]handlebars/i.test(args),
            template: /-[-]t($|emplate)/i.test(args)
        };
        args.splice(args.indexOf(/-[-](ember|handlebars|t($|emplate))/i), 1);
    }

    if (/-[-]d($|ebug)/i.test(args)) {
        snapArgs.set('debug', true);
        args.splice(args.indexOf(/-[-]d($|ebug)/i), 1);
    }

    if (/-[-]expand/i.test(args)) {
        snapArgs.set('expand', true);
        args.splice(args.indexOf(/-[-]expand/i), 1);
    }

    if (/-[-]m($|inify)/i.test(args)) {
        snapArgs.set('minify', true);
        args.splice(args.indexOf(/-[-]m($|inify)/i), 1);
    }

    if (/-[-]o($|pen)/i.test(args)) {
        snapArgs.set('open', true);
        args.splice(args.indexOf(/-[-]o($|pen)/i), 1);
    }

    for (var key in args) {
        snapArgs.set(key, args[key]);
    }
    if (snapArgs.debug) {
        require(__dirname + '/../Gulpfile')(
            main.bind(null)
        );
    } else {
        main();
    }
})();
